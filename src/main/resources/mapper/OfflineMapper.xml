<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hp.roam.dao.OfflineMapper">
  <resultMap id="BaseResultMap" type="com.hp.roam.model.Offline">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="error" jdbcType="VARCHAR" property="error" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createDate" />
    <result column="connectTime" jdbcType="BIGINT" property="connectTime" />
    <result column="durationOfOnline" jdbcType="BIGINT" property="durationOfOnline" />
    <result column="network" jdbcType="VARCHAR" property="network" />
    <result column="serverIP" jdbcType="VARCHAR" property="serverIP" />
    <result column="ram" jdbcType="INTEGER" property="ram" />
    <result column="cpu" jdbcType="VARCHAR" property="cpu" />
    <result column="tag" jdbcType="VARCHAR" property="tag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, status, error, createDate, connectTime, durationOfOnline, network, 
    serverIP, ram, cpu, tag
  </sql>
  <select id="selectByExample" parameterType="com.hp.roam.model.OfflineExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from offline
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from offline
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from offline
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hp.roam.model.OfflineExample">
    delete from offline
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hp.roam.model.Offline">
    insert into offline (id, username, status, 
      error, createDate, connectTime, 
      durationOfOnline, network, serverIP, 
      ram, cpu, tag)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{error,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{connectTime,jdbcType=BIGINT}, 
      #{durationOfOnline,jdbcType=BIGINT}, #{network,jdbcType=VARCHAR}, #{serverIP,jdbcType=VARCHAR}, 
      #{ram,jdbcType=INTEGER}, #{cpu,jdbcType=VARCHAR}, #{tag,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hp.roam.model.Offline">
    insert into offline
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="error != null">
        error,
      </if>
      <if test="createDate != null">
        createDate,
      </if>
      <if test="connectTime != null">
        connectTime,
      </if>
      <if test="durationOfOnline != null">
        durationOfOnline,
      </if>
      <if test="network != null">
        network,
      </if>
      <if test="serverIP != null">
        serverIP,
      </if>
      <if test="ram != null">
        ram,
      </if>
      <if test="cpu != null">
        cpu,
      </if>
      <if test="tag != null">
        tag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="error != null">
        #{error,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="connectTime != null">
        #{connectTime,jdbcType=BIGINT},
      </if>
      <if test="durationOfOnline != null">
        #{durationOfOnline,jdbcType=BIGINT},
      </if>
      <if test="network != null">
        #{network,jdbcType=VARCHAR},
      </if>
      <if test="serverIP != null">
        #{serverIP,jdbcType=VARCHAR},
      </if>
      <if test="ram != null">
        #{ram,jdbcType=INTEGER},
      </if>
      <if test="cpu != null">
        #{cpu,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        #{tag,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hp.roam.model.OfflineExample" resultType="java.lang.Long">
    select count(*) from offline
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update offline
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.error != null">
        error = #{record.error,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        createDate = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.connectTime != null">
        connectTime = #{record.connectTime,jdbcType=BIGINT},
      </if>
      <if test="record.durationOfOnline != null">
        durationOfOnline = #{record.durationOfOnline,jdbcType=BIGINT},
      </if>
      <if test="record.network != null">
        network = #{record.network,jdbcType=VARCHAR},
      </if>
      <if test="record.serverIP != null">
        serverIP = #{record.serverIP,jdbcType=VARCHAR},
      </if>
      <if test="record.ram != null">
        ram = #{record.ram,jdbcType=INTEGER},
      </if>
      <if test="record.cpu != null">
        cpu = #{record.cpu,jdbcType=VARCHAR},
      </if>
      <if test="record.tag != null">
        tag = #{record.tag,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update offline
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      error = #{record.error,jdbcType=VARCHAR},
      createDate = #{record.createDate,jdbcType=TIMESTAMP},
      connectTime = #{record.connectTime,jdbcType=BIGINT},
      durationOfOnline = #{record.durationOfOnline,jdbcType=BIGINT},
      network = #{record.network,jdbcType=VARCHAR},
      serverIP = #{record.serverIP,jdbcType=VARCHAR},
      ram = #{record.ram,jdbcType=INTEGER},
      cpu = #{record.cpu,jdbcType=VARCHAR},
      tag = #{record.tag,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hp.roam.model.Offline">
    update offline
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="error != null">
        error = #{error,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        createDate = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="connectTime != null">
        connectTime = #{connectTime,jdbcType=BIGINT},
      </if>
      <if test="durationOfOnline != null">
        durationOfOnline = #{durationOfOnline,jdbcType=BIGINT},
      </if>
      <if test="network != null">
        network = #{network,jdbcType=VARCHAR},
      </if>
      <if test="serverIP != null">
        serverIP = #{serverIP,jdbcType=VARCHAR},
      </if>
      <if test="ram != null">
        ram = #{ram,jdbcType=INTEGER},
      </if>
      <if test="cpu != null">
        cpu = #{cpu,jdbcType=VARCHAR},
      </if>
      <if test="tag != null">
        tag = #{tag,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hp.roam.model.Offline">
    update offline
    set username = #{username,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      error = #{error,jdbcType=VARCHAR},
      createDate = #{createDate,jdbcType=TIMESTAMP},
      connectTime = #{connectTime,jdbcType=BIGINT},
      durationOfOnline = #{durationOfOnline,jdbcType=BIGINT},
      network = #{network,jdbcType=VARCHAR},
      serverIP = #{serverIP,jdbcType=VARCHAR},
      ram = #{ram,jdbcType=INTEGER},
      cpu = #{cpu,jdbcType=VARCHAR},
      tag = #{tag,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>